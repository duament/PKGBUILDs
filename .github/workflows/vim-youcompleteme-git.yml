name: Build vim-youcompleteme-git
on:
  push:
    paths:
      - 'vim-youcompleteme-git/**'
      - '.github/workflows/vim-youcompleteme-git.yml'
  workflow_dispatch:

jobs:
  python-requests-futures:
    name: Build python-requests-futures
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    steps:
      - uses: actions/checkout@v2
      - name: Build python-requests-futures
        id: build_python_requests_futures
        uses: duament/build-arch-package@master
        with:
          PKGBUILD: $GITHUB_WORKSPACE/python-requests-futures
          OUTDIR: $HOME/python-requests-futures
      - uses: actions/upload-artifact@v2
        with:
          name: python-requests-futures
          path: ${{ steps.build_python_requests_futures.outputs.pkg_path }}

  job:
    name: Build vim-youcompleteme-git
    needs: python-requests-futures
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    steps:
      - uses: actions/checkout@v2
      - id: download
        uses: actions/download-artifact@v2
        with:
          name: python-requests-futures
          path: /pkg
      - id: get-param
        run: |
          pkg_path=$(ls -d /pkg/*)
          param="-I $pkg_path"
          echo "::set-output name=param::$param"
      - name: Build Arch Linux packages
        id: build
        uses: duament/build-arch-package@master
        with:
          PKGBUILD: $GITHUB_WORKSPACE/vim-youcompleteme-git
          OUTDIR: $HOME/arch-packages
          PARAM: ${{ steps.get-param.outputs.param }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: vim-youcompleteme-${{ github.event.head_commit.hash }}
          release_name: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.pkg_path }}
          asset_name: ${{ steps.build.outputs.pkg_name }}
          asset_content_type: application/zstd
